This document lists any changes we've made to miniaudio so that if we update it, they are easy to reimplement.

For the time being, we added a new distance attenuation model. Miniaudio doesn't yet allow us to plug in custom ones, and none of the builtin ones really give us what we want. With exponential and inverse you must get extremely far away from a sound for it to go silent if at all, and with linear you must go many tiles away from the sound to even begin hearing a volume reduction and even if you configure rolloff, you still have the same problem because though the value between 0 and 1 is returned linearly, this is not applied in db, meaning that the reduction in volume is much more audible at values near to 0 rather than a streight smooth volume reduction throughout the scale of 0 to 1. Our distance model uses the existing linear model but then run through a db scale.
If we update miniaudio:
Currently around line 50900, search for case ma_attenuation_model_exponential. Go to the end of that case block and add:
            case ma_attenuation_model_linear_db:
            {
                gain = ma_attenuation_linear_db(distance, minDistance, maxDistance, rolloff);
            } break;

The function we add below the implementation of ma_attenuation_exponential looks like:
static float ma_attenuation_linear_db(float distance, float minDistance, float maxDistance, float rolloff)
{
    return ma_volume_db_to_linear((1 - ma_attenuation_linear(distance, min_distance, max_distance, rolloff)) * -65);
}

Of course remember to add:
    ma_attenuation_model_linear_db   /* Custom attenuation model defined by NVGT. */
To the ma_attenuation_model enum.
